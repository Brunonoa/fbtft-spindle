#!/bin/bash
#
# cmptree: compare directory trees recursively and report the differences.
# Author: Ives Aerts

function gettype () {
  if [ -L "$1" ]; then
    echo "softlink"
  elif [ -f "$1" ]; then
    echo "file"
  elif [ -d "$1" ]; then
    echo "directory"
  elif [ -c "$1" -o -b "$1" ]; then
    echo "special"
  elif [ -p "$1" ]; then
    echo "pipe"
  else
    echo "unknown"
  fi
}

function exists () {
  if [ -e "$1" -o -L "$1" ]; then
    return 0;
  else
#    echo "$1 does not exist."
    return 1;
  fi
}

function comparefile () {
  [ "$1" = "/var/swap" ] && return
  cmp -s "$1" "$2"
  if [ $? -gt 0 ]; then
#    if [ -z "$(file "$1" | grep text)" ]; then
      echo "changed: $1 different from $2"
#    else
#      echo
#      diff -u "$1" "$2"
#      echo
#    fi

#  else
#    echo "$1 same as $2"
  fi
  return
}

function comparedirectory () {
  local result=0
#find "$1" -maxdepth 1 -print
#echo

#  (find "$1" -maxdepth 1 -printf "%f\n" | sed 1d && find "$2" -maxdepth 1 -printf "%f\n" | sed 1d) | sort | uniq | while read i ; do

  (find "$1" -maxdepth 1 ! -path . -printf "%f\n" && find "$2" -maxdepth 1 ! -path . -printf "%f\n") | sort | uniq | while read i ; do
    compare "$1/$i" "$2/$i" || result=1
  done
  return $result
}

function comparesoftlink () {
  local dest1=`ls -l "$1" | awk '{ print $11 }'`
  local dest2=`ls -l "$2" | awk '{ print $11 }'`

  if [ "$dest1" = "$dest2" ]; then
    return 0
  else
    echo "different link targets $1 -> $dest1, $2 -> $dest2"
    return 1
  fi
}

# compare a file, directory, or softlink
function compare () {
#echo ----"$1"
#  (exists "$1" && exists "$2") || return 1;

  if ! ( exists "$1" && exists "$2" ); then
    exists "$1" && echo "deleted: $1"
    exists "$2" && echo "added: $2"
    return 1;
  fi


  local type1=$(gettype "$1")
  local type2=$(gettype "$2")

  if [ $type1 = $type2 ]; then
    case $type1 in
      file)
        comparefile "$1" "$2"
        ;;
      directory)
        comparedirectory "$1" "$2"
        ;;
      softlink)
        comparesoftlink "$1" "$2"
        ;;
      special)
        true
        ;;
      pipe)
        true
        ;;
      *)
        echo "$1 of unknown type"
        false
        ;;
    esac
  else
    echo "type mismatch: $type1 ($1) and $type2 ($2)."
    false
  fi

  return
}

if [ 2 -ne $# ]; then
cat << EOU
Usage: $0 dir1 dir2
Compare directory trees:
  files are binary compared (cmp)
  directories are checked for identical content
  soft links are checked for identical targets
EOU
  exit 10
fi

compare "$1" "$2"
exit $?
